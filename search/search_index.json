{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Breaker Panel Labels Make an easy to read label for your circuit breaker panel Example output Inputs Create a csv file using this format. Separate the circuits cell with ; to list multiple items. number amp circuits panel room floor 1 30 water heater subpanel basement basement 7 15 master bed room lights; master bed room plugs; Master bath lights subpanel master bed 2nd Text block version of the above number,amp,circuits,panel,room,floor 1,30,water heater,subpanel,basement,basement, 7,15,master bed room lights; master bed room plugs; Master bath lights,subpanel,master bed,2nd","title":"Breaker Panel Labels"},{"location":"index.html#breaker-panel-labels","text":"Make an easy to read label for your circuit breaker panel Example output","title":"Breaker Panel Labels"},{"location":"index.html#inputs","text":"Create a csv file using this format. Separate the circuits cell with ; to list multiple items. number amp circuits panel room floor 1 30 water heater subpanel basement basement 7 15 master bed room lights; master bed room plugs; Master bath lights subpanel master bed 2nd Text block version of the above number,amp,circuits,panel,room,floor 1,30,water heater,subpanel,basement,basement, 7,15,master bed room lights; master bed room plugs; Master bath lights,subpanel,master bed,2nd","title":"Inputs"},{"location":"explanation.html","text":"","title":"Explanation"},{"location":"reference.html","text":"Make color coded pdf of your circuit breaker labels Returns: Name Type Description pdf PDF of labels parse_circuits ( row ) Parse circuit name text from csv file Parameters: Name Type Description Default row array row from csv file required Examples: >>> parse_circuits ( pd.Series( [1, 30, \"water heater\", \"subpanel\", \"basement\", \"basement\", \"\"], index=[\"number\", \"amp\", \"circuits\", \"panel\", \"room\", \"floor\", \"vue_number\"], ) ) ['Water heater'] Returns: Name Type Description list list of items controlled by circuit Source code in breaker_panel_labels/make_labels.py 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def parse_circuits ( row ): \"\"\"Parse circuit name text from csv file Args: row (array): row from csv file Examples: >>> parse_circuits( pd.Series( [1, 30, \"water heater\", \"subpanel\", \"basement\", \"basement\", \"\"], index=[\"number\", \"amp\", \"circuits\", \"panel\", \"room\", \"floor\", \"vue_number\"], ) ) ['Water heater'] Returns: list: list of items controlled by circuit \"\"\" circuits = [] for circuit in re . split ( \"[;|,|.]\" , row . circuits ): circuits . append ( circuit . strip () . capitalize ()) return circuits set_floor_color ( c , row ) Set box color based on floor Parameters: Name Type Description Default c report_lab_obj report lab canvas required row array row from csv file required Source code in breaker_panel_labels/make_labels.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 def set_floor_color ( c , row ): \"\"\"Set box color based on floor Args: c (report_lab_obj): report lab canvas row (array): row from csv file \"\"\" if row . floor == \"basement\" : c . setStrokeColor ( colors . blue ) elif row . floor == \"1st\" : c . setStrokeColor ( colors . green ) elif row . floor == \"2nd\" : c . setStrokeColor ( colors . red ) elif row . floor == \"outside\" : c . setStrokeColor ( colors . brown ) else : c . setStrokeColor ( colors . gray )","title":"API Reference"},{"location":"reference.html#make_labels.parse_circuits","text":"Parse circuit name text from csv file Parameters: Name Type Description Default row array row from csv file required Examples: >>> parse_circuits ( pd.Series( [1, 30, \"water heater\", \"subpanel\", \"basement\", \"basement\", \"\"], index=[\"number\", \"amp\", \"circuits\", \"panel\", \"room\", \"floor\", \"vue_number\"], ) ) ['Water heater'] Returns: Name Type Description list list of items controlled by circuit Source code in breaker_panel_labels/make_labels.py 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def parse_circuits ( row ): \"\"\"Parse circuit name text from csv file Args: row (array): row from csv file Examples: >>> parse_circuits( pd.Series( [1, 30, \"water heater\", \"subpanel\", \"basement\", \"basement\", \"\"], index=[\"number\", \"amp\", \"circuits\", \"panel\", \"room\", \"floor\", \"vue_number\"], ) ) ['Water heater'] Returns: list: list of items controlled by circuit \"\"\" circuits = [] for circuit in re . split ( \"[;|,|.]\" , row . circuits ): circuits . append ( circuit . strip () . capitalize ()) return circuits","title":"parse_circuits()"},{"location":"reference.html#make_labels.set_floor_color","text":"Set box color based on floor Parameters: Name Type Description Default c report_lab_obj report lab canvas required row array row from csv file required Source code in breaker_panel_labels/make_labels.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 def set_floor_color ( c , row ): \"\"\"Set box color based on floor Args: c (report_lab_obj): report lab canvas row (array): row from csv file \"\"\" if row . floor == \"basement\" : c . setStrokeColor ( colors . blue ) elif row . floor == \"1st\" : c . setStrokeColor ( colors . green ) elif row . floor == \"2nd\" : c . setStrokeColor ( colors . red ) elif row . floor == \"outside\" : c . setStrokeColor ( colors . brown ) else : c . setStrokeColor ( colors . gray )","title":"set_floor_color()"},{"location":"tutorials.html","text":"","title":"Tutorials"}]}